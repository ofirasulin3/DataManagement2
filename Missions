



3. check special characters in password/querystring

2. TODO: understand and implement async server (look at tips)
    make the read from mime.json await (needs to be non-blocking)
    make the searching for file and reading file with await (needs to be non-blocking)
    db read is blocking
*tests (start from blue marks)
*check again if form opens
*delete comments



done:

1. choose the right package for parsing the Mime json file and write code for extracting right content type
2. extract the port number from the config.py (open the file to a string, then take the first line, split by : and take the second and finished.)
3. add support for Post + Delete requests
   Post + Delete requests check for admin,
4. set up a timer through each connection with timeout parameter  (open timer when accepting a conncetion and change the while true to while timeout<=timeout(param)
5. create DB API for users:
   (insert(for post) + delete + check if exists )
   call user_exists before calling to delete or checkIfValid
6. understand how to implement dynamic pages with parser
7. in GET dp requests, check for valid users
8. check for /users in a post request
9. for GET requests, support for getting params
10. add support for Post request without Authorization field, if needed
* build dictionary outside parsing
*delete the timer handling
*make sure no client can access the users.db file and the config.py file.- 403 Forbidden
*when user (not admin) sends POST/DELETE requests we should return 403 (check if it's valid user)
  if it's not user, return 401
*401 for wrong authentication (not a user at all or wrong password)
* if there is no basic, do nothing and return 400
*test what happens when there is no authorization field
*update the parsing to support continuous lines and update inner loops for better aesthetics
*update the error handling to include headers and update all headers to include content/len
*what's not in the mime needs to be returned as plain text
*add an html file when Not Found (like in the pdf)
*add Connection: close
   and The mime-type of the response content
   (only if the configuration file includes the suitable mime-type).\
*if an authenticated user asks to delete or create (post) a user, return 403 forbidden
*pass on the instructions again

Questions for rani/Piazza:
1. is it needed to support Post/delete request without Authorization field? no
2. what do we need to do with query string? we did
3. Is the template parser structure is good (show him the function)? yes
   do we need to return something?
